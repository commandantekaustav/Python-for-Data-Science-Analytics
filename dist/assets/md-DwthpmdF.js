import{_ as o}from"./slidev/CodeBlockWrapper.vue_vue_type_script_setup_true_lang-BobOEePV.js";import{b as h,o as k,w as e,g as i,e as d,B as l,m as p,v as u,x as g,C as t}from"./modules/vue-DYRo_Lls.js";import{I as y}from"./slidev/two-cols-header-Bm3rW2CS.js";import{u as f,f as B}from"./slidev/context-Yz-4lzjv.js";import"./modules/unplugin-icons-CJ6nVESg.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const S={__name:"session-8.md__slidev_814",setup(m){const{$clicksContext:a,$frontmatter:n}=f();return a.setup(),(C,s)=>{const r=o;return k(),h(y,u(g(t(B)(t(n),813))),{default:e(()=>[s[1]||(s[1]=i("h3",null,"Filtering Data - OR Example (Part 2a) - Boolean Series Byte 🔍📊🐼",-1)),s[2]||(s[2]=i("p",null,[i("strong",null,"OR Filtering - Byte 1: Creating the Boolean Series")],-1)),s[3]||(s[3]=i("p",null,[l("Let’s focus on "),i("em",null,"just"),l(" creating the Boolean Series for our OR condition: "),i("code",null,"(Age < 25) | (City == 'Paris')"),l(".")],-1)),s[4]||(s[4]=i("p",null,[i("strong",null,"Code Snippet: Boolean Series Creation")],-1)),d(r,p({},{ranges:[]}),{default:e(()=>s[0]||(s[0]=[i("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[i("code",{class:"language-python"},[i("span",{class:"line"},[i("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}},"bool_series_or_condition "),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"="),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," ("),i("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}},"df"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"["),i("span",{style:{"--shiki-dark":"#C98A7D77","--shiki-light":"#B5695977"}},"'"),i("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"Age"),i("span",{style:{"--shiki-dark":"#C98A7D77","--shiki-light":"#B5695977"}},"'"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"]"),i("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," <"),i("span",{style:{"--shiki-dark":"#4C9A91","--shiki-light":"#2F798A"}}," 25"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},")"),i("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," |"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}}," ("),i("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}},"df"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"["),i("span",{style:{"--shiki-dark":"#C98A7D77","--shiki-light":"#B5695977"}},"'"),i("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"City"),i("span",{style:{"--shiki-dark":"#C98A7D77","--shiki-light":"#B5695977"}},"'"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"]"),i("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," =="),i("span",{style:{"--shiki-dark":"#C98A7D77","--shiki-light":"#B5695977"}}," '"),i("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"Paris"),i("span",{style:{"--shiki-dark":"#C98A7D77","--shiki-light":"#B5695977"}},"'"),i("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},")")])])],-1)])),_:1},16),s[5]||(s[5]=i("p",null,[i("strong",null,"Explanation:")],-1)),s[6]||(s[6]=i("ul",null,[i("li",null,[l("This line creates "),i("code",null,"bool_series_or_condition"),l(".")]),i("li",null,[l("It checks two conditions for each row: "),i("ul",null,[i("li",null,[i("code",null,"df['Age'] < 25"),l(": Is the 'Age' column value less than 25?")]),i("li",null,[i("code",null,"df['City'] == 'Paris'"),l(": Is the 'City' column value equal to 'Paris'?")])])]),i("li",null,[l("The "),i("code",null,"|"),l(" (OR) operator combines these: If "),i("em",null,"either"),l(" condition is "),i("code",null,"True"),l(" for a row, the entire condition is "),i("code",null,"True"),l(".")]),i("li",null,[l("The result is a pandas Series of "),i("code",null,"True"),l(" and "),i("code",null,"False"),l(" values.")])],-1)),s[7]||(s[7]=i("p",null,[i("strong",null,"Next, we’ll see how to use this Boolean Series to filter the DataFrame!")],-1))]),_:1},16)}}};export{S as default};
