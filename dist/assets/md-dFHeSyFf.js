import{b as r,o as i,w as a,g as n,B as e,v as u,x as d,C as t}from"./modules/vue-DcZKNubr.js";import{I as c}from"./slidev/default-DITZbOMS.js";import{u as p,f as g}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const _={__name:"s7.md__slidev_381",setup(f){const{$clicksContext:o,$frontmatter:s}=p();return o.setup(),(y,l)=>(i(),r(c,u(d(t(g)(t(s),380))),{default:a(()=>l[0]||(l[0]=[n("h2",null,"Welcome to Error Handling (and more!) üöÄ",-1),n("p",null,[n("strong",null,"In this Session 7, we will cover:")],-1),n("ul",null,[n("li",null,[n("strong",null,"What are Errors and Exceptions?"),e(" Types of errors in Python.")]),n("li",null,[n("strong",null,[e("Exception Handling with "),n("code",null,"try-except"),e(" blocks:")]),e(" Catching and handling exceptions.")]),n("li",null,[n("strong",null,"Handling Specific Exceptions:"),e(),n("code",null,"TypeError"),e(", "),n("code",null,"ValueError"),e(", "),n("code",null,"FileNotFoundError"),e(", etc.")]),n("li",null,[n("strong",null,[n("code",null,"else"),e(" and "),n("code",null,"finally"),e(" blocks in "),n("code",null,"try-except")]),e(".")]),n("li",null,[n("strong",null,"Raising Exceptions Manually.")]),n("li",null,[n("strong",null,[e("Assertions with "),n("code",null,"assert"),e(" statements:")]),e(" Using assertions for debugging and internal checks.")]),n("li",null,[n("strong",null,"(Brief Intro) Basic Type Annotations:"),e(" Syntax and benefits of type hints for readability and static analysis.")])],-1),n("p",null,[n("strong",null,"By the end of this session, you will be able to write more robust, easier-to-debug, and more readable Python code by effectively handling errors, using assertions, and understanding basic type annotations!")],-1),n("p",null,[n("strong",null,"Let‚Äôs begin with understanding Errors and Exceptions in Python!"),e(" ‚û°Ô∏è")],-1)])),_:1},16))}};export{_ as default};
