import{b as o,o as u,w as r,g as e,B as a,v as i,x as p,C as l}from"./modules/vue-DcZKNubr.js";import{I as m}from"./slidev/default-DITZbOMS.js";import{u as d,f as c}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const y={__name:"s3.md__slidev_119",setup(g){const{$clicksContext:n,$frontmatter:s}=d();return n.setup(),(f,t)=>(u(),o(m,i(p(l(c)(l(s),118))),{default:r(()=>t[0]||(t[0]=[e("h2",null,"Introduction to Tuples ðŸ“¦",-1),e("h1",null,"Core Python Data Structures: Tuples - Immutable Sequences",-1),e("p",null,[e("strong",null,"In the next few slides, we will explore:")],-1),e("ul",null,[e("li",null,[e("strong",null,"Creating Tuples")]),e("li",null,[e("strong",null,"Accessing Tuple elements (indexing and slicing) - same as lists!")]),e("li",null,[e("strong",null,"Tuple methods (fewer than lists, due to immutability)")]),e("li",null,[e("strong",null,"Tuple packing and unpacking")]),e("li",null,[e("strong",null,"â€¦and more!")])],-1),e("p",null,[e("strong",null,"Get ready to understand the power of immutability with Python Tuples!"),a(" ðŸ’ª")],-1)])),_:1},16))}};export{y as default};
