import{b as a,o as i,w as r,g as t,B as n,v as u,x as c,C as l}from"./modules/vue-DYRo_Lls.js";import{I as d}from"./slidev/default-COya6M-5.js";import{u as m,f as p}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const y={__name:"s6.md__slidev_375",setup(g){const{$clicksContext:e,$frontmatter:s}=m();return e.setup(),(f,o)=>(i(),a(d,u(c(l(p)(l(s),374))),{default:r(()=>o[0]||(o[0]=[t("h2",null,"Session 6 Summary - OOP & File Handling âœ…",-1),t("h1",null,"Session 6 Wrap-up: Introduction to OOP & File Handling",-1),t("p",null,[t("strong",null,"Congratulations on completing Session 6!"),n(" ðŸŽ‰ We covered a lot of ground in this combined session, introducing two important areas:")],-1),t("p",null,[t("strong",null,"Object-Oriented Programming (OOP) - Introduction:")],-1),t("ul",null,[t("li",null,[t("strong",null,"What is OOP:"),n(' A programming paradigm focused on "objects" that combine data and functions.')]),t("li",null,[t("strong",null,"Why OOP:"),n(" Modularity, reusability, encapsulation, abstraction, maintainability.")]),t("li",null,[t("strong",null,"Classes:"),n(" Blueprints or templates for creating objects.")]),t("li",null,[t("strong",null,"Objects (Instances):"),n(" Concrete entities created from classes, each with its own attributes and methods.")]),t("li",null,[t("strong",null,"Attributes:"),n(" Data associated with an object.")]),t("li",null,[t("strong",null,"Methods:"),n(" Functions that objects can perform, operating on their data.")]),t("li",null,[t("strong",null,"Basic Syntax:"),n(),t("code",null,"class"),n(", "),t("code",null,"__init__"),n(", "),t("code",null,"self"),n(", dot notation ("),t("code",null,"."),n(").")]),t("li",null,[t("strong",null,"(Briefly) Encapsulation and Abstraction:"),n(" Key OOP principles for good design.")])],-1)])),_:1},16))}};export{y as default};
