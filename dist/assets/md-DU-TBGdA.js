import{b as l,o as s,w as i,g as e,B as o,v as u,x as c,C as r}from"./modules/vue-DYRo_Lls.js";import{I as d}from"./slidev/default-COya6M-5.js";import{u as f,f as p}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const b={__name:"s8.md__slidev_435",setup(m){const{$clicksContext:a,$frontmatter:n}=f();return a.setup(),(g,t)=>(s(),l(d,u(c(r(p)(r(n),434))),{default:i(()=>t[0]||(t[0]=[e("h3",null,"Session 8 - Welcome to Advanced Topics! ðŸš€",-1),e("h1",null,"Iterators, Generators & Decorators",-1),e("p",null,[e("strong",null,"Welcome!"),o(" ðŸŽ‰ In this session, we will explore three powerful and elegant features of Python that will significantly enhance your programming abilities:")],-1),e("ol",null,[e("li",null,[e("p",null,[e("strong",null,"Iterators and Iterables:"),o(" Weâ€™ll dive deep into the concept of iteration in Python, understand what makes objects iterable, and learn how iterators work behind the scenes. Weâ€™ll also see how to create our own custom iterators.")])]),e("li",null,[e("p",null,[e("strong",null,"Generators:"),o(" We will discover generators - a special type of function that allows you to create sequences of values lazily and efficiently. Generators are memory-friendly and are incredibly useful for working with large datasets or infinite sequences.")])]),e("li",null,[e("p",null,[e("strong",null,"Decorators:"),o(" We will explore decorators, a highly useful and elegant feature for adding functionality to functions and methods in a reusable way. Decorators are a powerful tool for metaprogramming and for writing cleaner, more modular code.")])])],-1)])),_:1},16))}};export{b as default};
