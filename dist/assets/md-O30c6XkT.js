import{b as a,o as u,w as s,g as e,B as t,v as i,x as c,C as n}from"./modules/vue-DYRo_Lls.js";import{I as d}from"./slidev/default-COya6M-5.js";import{u as m,f as p}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const C={__name:"s8.md__slidev_452",setup(f){const{$clicksContext:o,$frontmatter:r}=m();return o.setup(),(h,l)=>(u(),a(d,i(c(n(p)(n(r),451))),{default:s(()=>l[0]||(l[0]=[e("h3",null,"Your Turn: Custom Iterator Exercise ✍️",-1),e("h1",null,"Your Turn! Build a Vowel Iterator",-1),e("p",null,[e("strong",null,"Let’s create a custom iterator to practice implementing the iterator protocol!")],-1),e("p",null,[e("strong",null,[t("Key Concept: The "),e("code",null,"yield"),t(" Keyword")])],-1),e("ul",null,[e("li",null,[e("strong",null,[e("code",null,"yield"),t(" vs. "),e("code",null,"return"),t(":")]),e("ul",null,[e("li",null,[e("code",null,"return"),t(" terminates a function and returns a value.")]),e("li",null,[e("code",null,"yield"),t(' pauses the function’s execution, "yields" a value to the caller, and saves the function’s state so it can be resumed from where it left off the next time '),e("code",null,"next()"),t(" is called on the generator.")])])]),e("li",null,[e("strong",null,[t("Multiple "),e("code",null,"yield"),t(" statements:")]),t(" A generator function can have multiple "),e("code",null,"yield"),t(" statements. Each "),e("code",null,"yield"),t(" statement produces a value in the sequence.")]),e("li",null,[e("strong",null,"Implicitly creates an iterator:"),t(" When a function contains "),e("code",null,"yield"),t(", it becomes a generator function and implicitly creates an iterator.")])],-1)])),_:1},16))}};export{C as default};
