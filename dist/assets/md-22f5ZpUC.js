import{b as s,o as a,w as u,g as e,B as n,v as i,x as d,C as l}from"./modules/vue-DYRo_Lls.js";import{I as m}from"./slidev/default-COya6M-5.js";import{u as c,f as p}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const C={__name:"s3.md__slidev_170",setup(g){const{$clicksContext:o,$frontmatter:r}=c();return o.setup(),(f,t)=>(a(),s(m,i(d(l(p)(l(r),169))),{default:u(()=>t[0]||(t[0]=[e("h3",null,"Adding and Removing Set Elements",-1),e("h1",null,"Modifying Sets: Adding and Removing Elements",-1),e("p",null,[e("strong",null,"Sets are mutable, so you can add and remove elements after they are created.")],-1),e("p",null,[e("strong",null,"Your Turn!")],-1),e("ul",null,[e("li",null,"Create a set of numbers or letters."),e("li",null,[n("Practice: "),e("ul",null,[e("li",null,[n("Adding elements using "),e("code",null,"add()"),n(" and "),e("code",null,"update()"),n(".")]),e("li",null,[n("Removing elements using "),e("code",null,"remove()"),n(", "),e("code",null,"discard()"),n(", and "),e("code",null,"pop()"),n(".")]),e("li",null,[n("Clearing the set using "),e("code",null,"clear()"),n(".")]),e("li",null,"Experiment with adding duplicate items - observe that sets maintain uniqueness."),e("li",null,[n("Try to "),e("code",null,"remove()"),n(" an item that is not in the set - observe the "),e("code",null,"KeyError"),n(", and contrast with "),e("code",null,"discard()"),n(".")])])])],-1),e("p",null,[e("strong",null,"Next: Let’s explore the powerful Set Operations - union, intersection, difference, and more!"),n(" ➡️")],-1)])),_:1},16))}};export{C as default};
