import{b as r,o as s,w as u,g as o,B as n,v as i,x as c,C as e}from"./modules/vue-DYRo_Lls.js";import{I as m}from"./slidev/default-COya6M-5.js";import{u as f,f as p}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const C={__name:"s8.md__slidev_477",setup(g){const{$clicksContext:l,$frontmatter:a}=f();return l.setup(),(d,t)=>(s(),r(m,i(c(e(p)(e(a),476))),{default:u(()=>t[0]||(t[0]=[o("h3",null,"Decorators - Introduction - Function Enhancement ðŸª„",-1),o("h1",null,"Decorators: Enhancing Functions with Elegance",-1),o("p",null,[o("strong",null,"Decorators are a powerful and elegant feature in Python that allows you to modify or enhance the behavior of functions or methods in a reusable way.")],-1),o("p",null,[o("strong",null,"Common Use Cases for Decorators:")],-1),o("ul",null,[o("li",null,[o("strong",null,"Logging:"),n(" To automatically log function calls, arguments, and return values.")]),o("li",null,[o("strong",null,"Timing:"),n(" To measure the execution time of functions.")]),o("li",null,[o("strong",null,"Input Validation:"),n(" To check function arguments before the function executes.")]),o("li",null,[o("strong",null,"Access Control/Authorization:"),n(" To control who can access certain functions.")]),o("li",null,[o("strong",null,"Caching:"),n(" To memoize (cache) function results for performance optimization.")])],-1),o("p",null,[o("strong",null,"Decorators are a key tool for writing more modular, reusable, and maintainable Python code, especially when you need to add common functionalities to multiple functions.")],-1)])),_:1},16))}};export{C as default};
