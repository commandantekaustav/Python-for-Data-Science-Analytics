import{b as r,o as s,w as i,g as o,B as n,v as u,x as c,C as e}from"./modules/vue-DYRo_Lls.js";import{I as m}from"./slidev/default-COya6M-5.js";import{u as p,f as g}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const w={__name:"session-4.md__slidev_671",setup(d){const{$clicksContext:a,$frontmatter:t}=p();return a.setup(),(f,l)=>(s(),r(m,u(c(e(g)(e(t),670))),{default:i(()=>l[0]||(l[0]=[o("h3",null,"Common UFunc Categories: Logical UFuncs - Summary ✅",-1),o("p",null,[o("strong",null,"Summary of Logical UFuncs:")],-1),o("ul",null,[o("li",null,[o("strong",null,"Element-wise Logical Operations:"),n(" NumPy provides UFuncs for common logical operations: AND ("),o("code",null,"np.logical_and()"),n("), OR ("),o("code",null,"np.logical_or()"),n("), NOT ("),o("code",null,"np.logical_not()"),n("), and XOR ("),o("code",null,"np.logical_xor()"),n(").")]),o("li",null,[o("strong",null,"Boolean Array Inputs & Outputs:"),n(" Logical UFuncs typically operate on boolean arrays and always return boolean arrays as their result.")]),o("li",null,[o("strong",null,"Combining Boolean Conditions:"),n(" Logical UFuncs are essential for combining and manipulating boolean conditions, allowing for complex data filtering and selection based on multiple criteria.")])],-1),o("p",null,[o("strong",null,"Having explored Arithmetic, Trigonometric, Comparison, and Logical UFuncs, we’ve covered the main categories of UFuncs in NumPy!")],-1),o("p",null,[o("strong",null,[n("Next, we will move on to explore key "),o("em",null,"Features"),n(' of UFuncs, starting with "UFunc Methods"!')])],-1)])),_:1},16))}};export{w as default};
