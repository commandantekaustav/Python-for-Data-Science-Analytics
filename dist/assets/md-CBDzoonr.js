import{b as m,o as a,w as o,g as t,B as l,v as u,x as p,C as i}from"./modules/vue-DcZKNubr.js";import{I as c}from"./slidev/two-cols-header-DfCb6LcV.js";import{u as g,f as d}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const R={__name:"s9dd.md__slidev_654",setup(f){const{$clicksContext:s,$frontmatter:r}=g();return s.setup(),(y,e)=>(a(),m(c,u(p(i(d)(i(r),653))),{left:o(n=>e[0]||(e[0]=[t("p",null,[t("strong",null,"Explanation:")],-1),t("ul",null,[t("li",null,[l("Git allows you to "),t("em",null,"alter"),l(" commit history "),t("em",null,"after"),l(" commits have been made.")]),t("li",null,[l("Powerful, but "),t("strong",null,"VERY DANGEROUS"),l(" in collaborative projects, especially after pushing to shared remotes!")]),t("li",null,[t("strong",null,"Rewriting history changes commit hashes."),l(" This can cause serious problems for collaborators who have based work on the original history.")])],-1)])),right:o(n=>e[1]||(e[1]=[t("p",null,[t("strong",null,"Common History Rewriting Commands (Use Sparingly & Locally):")],-1),t("ul",null,[t("li",null,[t("code",null,"git commit --amend"),l(": Modify the "),t("em",null,"last"),l(" commit (e.g., fix commit message, stage forgotten changes into last commit). "),t("em",null,"Generally safer than rebase if only modifying very recent, unpushed commits.")]),t("li",null,[t("code",null,"git rebase -i <commit>"),l(": Interactive rebase - powerful tool to rewrite history: "),t("ul",null,[t("li",null,"Combine commits (squash)."),t("li",null,"Reorder commits."),t("li",null,"Edit commit messages of multiple commits."),t("li",null,"Split commits.")])])],-1)])),default:o(()=>[e[2]||(e[2]=t("h3",null,"Git Deep Dive - Rewriting History: Power with Responsibility",-1)),e[3]||(e[3]=t("p",null,[t("strong",null,"Rewriting History - Use with Extreme Caution!")],-1))]),_:1},16))}};export{R as default};
