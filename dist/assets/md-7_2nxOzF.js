import{b as r,o as i,w as l,g as e,B as s,v as m,x as u,C as o}from"./modules/vue-DYRo_Lls.js";import{I as d}from"./slidev/default-COya6M-5.js";import{u as c,f as p}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const b={__name:"session-2.md__slidev_591",setup(f){const{$clicksContext:t,$frontmatter:a}=c();return t.setup(),(g,n)=>(i(),r(d,m(u(o(p)(o(a),590))),{default:l(()=>n[0]||(n[0]=[e("h2",null,"NumPy Broadcasting - Rule 3 and Summary 📏📏📏",-1),e("h3",null,"Broadcasting Rule 3: Alignment of Dimensions",-1),e("p",null,[e("strong",null,"Rule 3 is the final rule that determines broadcasting compatibility. It ensures dimensions are aligned from right to left (trailing dimensions).")],-1),e("p",null,[e("strong",null,"Broadcasting Rule 3:")],-1),e("blockquote",null,[e("p",null,[s("Broadcasting applies across dimensions if, when comparing the shape of the arrays "),e("strong",null,"from trailing dimensions backwards"),s(":")]),e("ol",null,[e("li",null,[s("The dimensions are "),e("strong",null,"compatible"),s(" (Rule 1: equal or one is 1), or")]),e("li",null,'If either array has more dimensions, the "missing" dimensions in the smaller array are considered to have size 1.')])],-1)])),_:1},16))}};export{b as default};
