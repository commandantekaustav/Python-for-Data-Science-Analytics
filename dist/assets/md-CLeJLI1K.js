import{b as u,o as r,w as a,g as e,B as t,v as i,x as c,C as o}from"./modules/vue-DYRo_Lls.js";import{I as m}from"./slidev/default-COya6M-5.js";import{u as d,f as p}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const b={__name:"s4.md__slidev_211",setup(f){const{$clicksContext:l,$frontmatter:s}=d();return l.setup(),(h,n)=>(r(),u(m,i(c(o(p)(o(s),210))),{default:a(()=>n[0]||(n[0]=[e("h3",null,[e("code",null,"for"),t(" Loop with "),e("code",null,"enumerate()"),t(" (Index and Item) üîÑüìç")],-1),e("h1",null,[e("code",null,"for"),t(" Loop with "),e("code",null,"enumerate()"),t(": Accessing Index and Item")],-1),e("p",null,[e("strong",null,[t("Often, when you iterate through a sequence, you need not only the "),e("em",null,"item"),t(" itself, but also its "),e("em",null,"index"),t(" (position) in the sequence.")]),t(" Python‚Äôs "),e("code",null,"enumerate()"),t(" function is perfect for this!")],-1),e("p",null,[e("strong",null,[t("What does "),e("code",null,"enumerate()"),t(" do?")])],-1),e("ul",null,[e("li",null,[e("code",null,"enumerate(sequence)"),t(" is a built-in function that takes a sequence (like a list, tuple, or string) as input and returns an "),e("strong",null,"enumerate object"),t(".")]),e("li",null,[t("This enumerate object yields pairs of "),e("strong",null,"(index, item)"),t(" for each element in the sequence.")])],-1)])),_:1},16))}};export{b as default};
