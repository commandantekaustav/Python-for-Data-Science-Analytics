import{b as s,o as r,w as t,g as l,B as o,v as u,x as p,C as e}from"./modules/vue-DYRo_Lls.js";import{_ as d}from"./slidev/two-cols.vue_vue_type_script_setup_true_lang-N3VpOZ66.js";import{u as m,f}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const B={__name:"s7.md__slidev_413",setup(y){const{$clicksContext:i,$frontmatter:a}=m();return i.setup(),(g,n)=>(r(),s(d,u(p(e(f)(e(a),412))),{right:t(c=>n[0]||(n[0]=[l("ul",null,[l("li",null,[l("code",null,"tuple"),o(" (tuple)")]),l("li",null,[l("code",null,"dict"),o(" (dictionary)")]),l("li",null,[l("code",null,"set"),o(" (set)")]),l("li",null,[l("code",null,"None"),o(" (for variables that can be None)")]),l("li",null,[l("code",null,"Any"),o(" (to indicate any type is allowed - use sparingly)")])],-1),l("p",null,[l("strong",null,"Type annotations are a valuable tool for improving code clarity and maintainability, especially in larger projects. While they are optional in Python, adopting them can bring significant benefits to your development workflow!")],-1),l("p",null,[l("strong",null,"Next: Let’s see more examples of type annotations in functions and explore their benefits further!"),o(" ➡️")],-1)])),default:t(()=>[n[1]||(n[1]=l("h3",null,"Basic Type Annotations - Intro ⌨️",-1)),n[2]||(n[2]=l("h1",null,"Type Hints - Improving Code Readability",-1)),n[3]||(n[3]=l("p",null,[l("strong",null,"Type annotations, also known as type hints, are a feature in Python that allows you to add optional type information to your code.")],-1)),n[4]||(n[4]=l("p",null,[l("strong",null,"Commonly Used Built-in Types for Annotations:")],-1)),n[5]||(n[5]=l("ul",null,[l("li",null,[l("code",null,"int"),o(" (integer)")]),l("li",null,[l("code",null,"float"),o(" (floating-point number)")]),l("li",null,[l("code",null,"str"),o(" (string)")]),l("li",null,[l("code",null,"bool"),o(" (boolean)")]),l("li",null,[l("code",null,"list"),o(" (list)")])],-1))]),_:1},16))}};export{B as default};
