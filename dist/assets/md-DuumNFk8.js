import{b as i,o as r,w as a,g as e,B as t,v as u,x as m,C as s}from"./modules/vue-DYRo_Lls.js";import{I as c}from"./slidev/default-COya6M-5.js";import{u as p,f as d}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const y={__name:"s3.md__slidev_158",setup(f){const{$clicksContext:l,$frontmatter:o}=p();return l.setup(),(h,n)=>(r(),i(c,u(m(s(d)(s(o),157))),{default:a(()=>n[0]||(n[0]=[e("h3",null,"Introduction to Sets ðŸ§½",-1),e("h1",null,"Core Python Data Structures: Sets - Unordered Unique Collections",-1),e("p",null,[e("strong",null,[t("Letâ€™s explore the final core data structure in this session: "),e("strong",null,"Sets"),t(".")])],-1),e("p",null,[e("strong",null,"Why are Sets Useful? Uniqueness and Set Operations:")],-1),e("ul",null,[e("li",null,[e("strong",null,"Efficient Membership Testing:"),t(' Sets are highly optimized for checking if an element is present in the set. "Is this item in this collection?" is a very fast operation with sets.')]),e("li",null,[e("strong",null,"Removing Duplicate Items:"),t(" Sets are a natural way to eliminate duplicates from a collection of items. Simply convert a list to a set and back to a list to remove duplicates.")]),e("li",null,[e("strong",null,"Mathematical Set Operations:"),t(" Sets support standard mathematical set operations like: "),e("ul",null,[e("li",null,[e("strong",null,"Union:"),t(" Combine elements from two sets.")]),e("li",null,[e("strong",null,"Intersection:"),t(" Find common elements between sets.")]),e("li",null,[e("strong",null,"Difference:"),t(" Find elements present in one set but not in another.")]),e("li",null,"â€¦and more!")])])],-1)])),_:1},16))}};export{y as default};
