import{b as r,o as a,w as u,g as e,B as t,v as i,x as m,C as l}from"./modules/vue-DcZKNubr.js";import{I as c}from"./slidev/default-DITZbOMS.js";import{u as d,f as p}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const v={__name:"s3.md__slidev_157",setup(f){const{$clicksContext:s,$frontmatter:o}=d();return s.setup(),(g,n)=>(a(),r(c,i(m(l(p)(l(o),156))),{default:u(()=>n[0]||(n[0]=[e("h3",null,"Introduction to Sets ðŸ§½",-1),e("h1",null,"Core Python Data Structures: Sets - Unordered Unique Collections",-1),e("p",null,[e("strong",null,[t("Letâ€™s explore the final core data structure in this session: "),e("strong",null,"Sets"),t(".")])],-1),e("p",null,[e("strong",null,"What are Sets in Python?")],-1),e("ul",null,[e("li",null,[e("strong",null,[t("Unordered collections of "),e("em",null,"unique"),t(" items:")]),t(" Sets store elements in no particular order, and they "),e("strong",null,"automatically eliminate duplicate values."),t(" If you add a duplicate, itâ€™s simply ignored.")]),e("li",null,[e("strong",null,"Mutable:"),t(" You can add and remove elements from a set after itâ€™s created, but you cannot modify existing elements directly (since elements are unique and their identity is based on their value).")]),e("li",null,[e("strong",null,"Elements must be immutable:"),t(" Set elements themselves must be of immutable types (like numbers, strings, tuples). You cannot have lists or dictionaries as elements within a set.")]),e("li",null,[e("strong",null,[t("Created using curly braces "),e("code",null,"{}")]),t(" or the "),e("code",null,"set()"),t(" constructor.")])],-1)])),_:1},16))}};export{v as default};
