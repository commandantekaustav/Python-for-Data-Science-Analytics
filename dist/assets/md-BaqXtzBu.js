import{_ as m}from"./slidev/VClick-dTqCkwfl.js";import{_ as p}from"./slidev/VClicks-B6c2E_rL.js";import{b as y,o as f,w as o,g as e,e as n,B as r,v as d,x as c,C as s}from"./modules/vue-DYRo_Lls.js";import{I as g}from"./slidev/default-COya6M-5.js";import{u as P,f as _}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const b={__name:"session-1.md__slidev_539",setup(v){const{$clicksContext:a,$frontmatter:l}=P();return a.setup(),(h,t)=>{const i=p,u=m;return f(),y(g,d(c(s(_)(s(l),538))),{default:o(()=>[t[2]||(t[2]=e("h2",null,"NumPy vs. Python Lists - Why NumPy? ðŸš€",-1)),t[3]||(t[3]=e("h3",null,[e("strong",null,"NumPy vs. Python Lists: Why Choose NumPy?")],-1)),t[4]||(t[4]=e("p",null,[e("strong",null,"Python lists are versatile, but for numerical computations, NumPy arrays offer significant advantages. Letâ€™s explore why NumPy arrays are often the preferred choice for numerical tasks.")],-1)),t[5]||(t[5]=e("p",null,[e("strong",null,"Key Advantages of NumPy Arrays over Python Lists:")],-1)),n(i,{depth:"2"},{default:o(()=>t[0]||(t[0]=[e("ul",null,[e("li",null,[e("strong",null,"3. Memory Efficiency:"),e("ul",null,[e("li",null,[e("strong",null,"Homogeneous Data Storage:"),r(" Storing elements of the same data type in contiguous memory can be more memory-efficient than Python lists, especially for large numerical datasets.")]),e("li",null,[e("strong",null,"Less Overhead:"),r(" NumPy arrays have less per-element overhead compared to Python lists, which store type information and other metadata for each element.")])])])],-1)])),_:1}),n(u,null,{default:o(()=>t[1]||(t[1]=[e("p",null,[e("strong",null,"In essence, NumPy arrays are specialized data structures designed and optimized for numerical computations. For tasks involving numerical data and mathematical operations, NumPy arrays provide superior performance, functionality, and often memory efficiency compared to general-purpose Python lists.")],-1)])),_:1})]),_:1},16)}}};export{b as default};
