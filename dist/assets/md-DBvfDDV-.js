import{_ as i}from"./slidev/VClicks-BuHXMW_p.js";import{b as u,o as m,w as l,g as e,e as c,B as n,v as p,x as d,C as o}from"./modules/vue-DcZKNubr.js";import{I as f}from"./slidev/default-DITZbOMS.js";import{u as g,f as y}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const v={__name:"s3.md__slidev_118",setup(b){const{$clicksContext:s,$frontmatter:r}=g();return s.setup(),(h,t)=>{const a=i;return m(),u(f,p(d(o(y)(o(r),117))),{default:l(()=>[t[1]||(t[1]=e("h2",null,"Introduction to Tuples ðŸ“¦",-1)),t[2]||(t[2]=e("h1",null,"Core Python Data Structures: Tuples - Immutable Sequences",-1)),t[3]||(t[3]=e("p",null,[e("strong",null,"Why use Tuples? Immutability and More:")],-1)),c(a,null,{default:l(()=>t[0]||(t[0]=[e("ul",null,[e("li",null,[e("strong",null,"Data Integrity:"),n(" Immutability ensures that the data in a tuple remains constant throughout your program. This can be important for representing fixed collections of items that should not be accidentally modified.")]),e("li",null,[e("strong",null,"Performance:"),n(" Tuples can be slightly more memory-efficient and faster than lists in some cases, especially when you know the collection will not change.")]),e("li",null,[e("strong",null,"Representing Fixed Data:"),n(" Tuples are often used to represent fixed records of information, like coordinates (x, y), RGB color values (red, green, blue), or database records.")]),e("li",null,[e("strong",null,"Keys in Dictionaries:"),n(" Tuples can be used as keys in dictionaries (which weâ€™ll learn about next!), while lists cannot (because dictionary keys must be immutable).")]),e("li",null,[e("strong",null,"Returning Multiple Values from Functions:"),n(" Functions can efficiently return multiple values as a tuple.")])],-1)])),_:1})]),_:1},16)}}};export{v as default};
