import{b as l,o as i,w as s,g as e,B as t,v as u,x as m,C as r}from"./modules/vue-DcZKNubr.js";import{I as d}from"./slidev/default-DITZbOMS.js";import{u as c,f as h}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const b={__name:"s9dd.md__slidev_655",setup(p){const{$clicksContext:a,$frontmatter:o}=c();return a.setup(),(g,n)=>(i(),l(d,u(m(r(h)(r(o),654))),{default:s(()=>n[0]||(n[0]=[e("h3",null,"Git Deep Dive - Rewriting History: Power with Responsibility",-1),e("p",null,[e("strong",null,"Rewriting History - Use with Extreme Caution!")],-1),e("p",null,[e("strong",null,"WHEN TO (CAREFULLY) REWRITE HISTORY (LOCAL, BEFORE PUSHING SHARED BRANCHES):")],-1),e("ul",null,[e("li",null,[t("Cleaning up "),e("em",null,"local"),t(" feature branch history "),e("em",null,"before"),t(" creating a Pull Request (squashing commits, improving messages - makes PR easier to review).")]),e("li",null,[t("Fixing a mistake in the "),e("em",null,"very last"),t(" commit ("),e("code",null,"git commit --amend"),t(").")])],-1),e("p",null,[e("strong",null,"WHEN NEVER TO REWRITE HISTORY (AFTER PUSHING SHARED BRANCHES):")],-1),e("ul",null,[e("li",null,[e("strong",null,[t("NEVER rewrite history on branches that are shared and collaborated on (like "),e("code",null,"main"),t(", or shared feature branches) after they have been pushed to a remote repository!")]),t(" This will cause major headaches for your team.")])],-1),e("p",null,[e("strong",null,"Warning:"),t(" Rewriting history, especially after sharing branches, is advanced and should be done with extreme caution and only when you fully understand the implications. For beginners and in collaborative settings, itâ€™s often best to avoid rewriting shared history.")],-1)])),_:1},16))}};export{b as default};
