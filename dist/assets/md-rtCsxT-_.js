import{b as i,o as u,w as o,g as e,B as n,v as c,x as p,C as r}from"./modules/vue-DcZKNubr.js";import{I as d}from"./slidev/two-cols-header-DfCb6LcV.js";import{u as f,f as m}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const P={__name:"s8.md__slidev_492",setup(g){const{$clicksContext:s,$frontmatter:l}=f();return s.setup(),(x,t)=>(u(),i(d,c(p(r(m)(r(l),491))),{left:o(a=>t[0]||(t[0]=[e("p",null,[e("strong",null,"3. Generators:")],-1),e("ul",null,[e("li",null,[n("Functions that use "),e("code",null,"yield"),n(" to produce a sequence of values lazily (on demand).")]),e("li",null,"Generator functions return generator objects (which are iterators)."),e("li",null,"Memory-efficient: generate values one at a time, don’t store entire sequences."),e("li",null,[n("Generator expressions: concise syntax for simple generators using "),e("code",null,"()"),n(".")]),e("li",null,"Use cases: data pipelines, memory-efficient processing of large datasets, concurrency.")],-1)])),right:o(a=>t[1]||(t[1]=[e("p",null,[e("strong",null,"4. Decorators:")],-1),e("ul",null,[e("li",null,'"Wrappers" to enhance functions without changing their core logic.'),e("li",null,"Reusable function enhancements (logging, timing, validation, etc.)."),e("li",null,"Defined as functions that take a function as input and return a modified function (wrapper)."),e("li",null,[n("Applied using the "),e("code",null,"@decorator_name"),n(" syntax.")]),e("li",null,"Decorator factories: create parameterized decorators.")],-1)])),default:o(()=>[t[2]||(t[2]=e("h3",null,"Session 8 Summary - Iterators, Generators & Decorators ✅",-1))]),_:1},16))}};export{P as default};
