import{b as r,o as a,w as i,g as e,B as o,v as c,x as u,C as n}from"./modules/vue-DcZKNubr.js";import{I as d}from"./slidev/default-DITZbOMS.js";import{u as p,f as m}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const v={__name:"s4.md__slidev_201",setup(f){const{$clicksContext:l,$frontmatter:s}=p();return l.setup(),(h,t)=>(a(),r(d,c(u(n(m)(n(s),200))),{default:i(()=>t[0]||(t[0]=[e("h3",null,"Conditional Statements (Nested if) üö¶",-1),e("h1",null,[o("Control Flow: Conditional Statements - Nested "),e("code",null,"if")],-1),e("p",null,[e("strong",null,"Indentation is Crucial for Nested Conditionals:")],-1),e("ul",null,[e("li",null,[o("Indentation clearly shows the nesting level and which "),e("code",null,"if"),o(", "),e("code",null,"elif"),o(", or "),e("code",null,"else"),o(" clause each code block belongs to. Incorrect indentation will lead to errors or unexpected behavior.")])],-1),e("p",null,[e("strong",null,[o("Use Nested "),e("code",null,"if"),o(" Statements When:")])],-1),e("ul",null,[e("li",null,"You need to check conditions within conditions."),e("li",null,"You want to create a hierarchy of decisions."),e("li",null,"Be careful not to nest too deeply, as it can make code harder to read. For very complex conditions, consider alternative approaches like using functions or more structured logic.")],-1),e("p",null,[e("strong",null,"Next: Let‚Äôs move on from conditional statements to another essential control flow structure: Loops! Starting with for loops."),o(" ‚û°Ô∏è")],-1)])),_:1},16))}};export{v as default};
