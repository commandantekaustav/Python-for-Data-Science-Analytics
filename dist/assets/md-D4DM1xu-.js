import{b as a,o as s,w as u,g as e,i as o,B as t,v as d,x as c,C as r}from"./modules/vue-DYRo_Lls.js";import{I as m}from"./slidev/default-COya6M-5.js";import{u as p,f}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const C={__name:"s8.md__slidev_454",setup(h){const{$clicksContext:l,$frontmatter:i}=p();return l.setup(),(g,n)=>(s(),a(m,d(c(r(f)(r(i),453))),{default:u(()=>[n[0]||(n[0]=e("h3",null,"Your Turn: Custom Iterator Exercise ✍️",-1)),o(" # Your Turn! Build a Vowel Iterator "),o(" **Let's create a custom iterator to practice implementing the iterator protocol!** "),o(" **Example: A Simple Generator Function** "),n[1]||(n[1]=e("p",null,[e("strong",null,[t("Explanation of "),e("code",null,"number_generator"),t(":")])],-1)),n[2]||(n[2]=e("ul",null,[e("li",null,[t("When "),e("code",null,"number_generator(5)"),t(" is called, it returns a generator object (not executes the function body immediately).")]),e("li",null,[t("When the "),e("code",null,"for"),t(" loop starts iterating, or when "),e("code",null,"next()"),t(" is called, the function body starts executing from the beginning.")]),e("li",null,[t("When "),e("code",null,"yield i"),t(" is encountered, the current value of "),e("code",null,"i"),t(' is "yielded" (returned) to the loop, and the function’s state is saved.')]),e("li",null,[t("The next time the loop asks for the next value, the function resumes from where it was paused (right after the "),e("code",null,"yield"),t(" statement), and continues until the next "),e("code",null,"yield"),t(" or until the function finishes (implicitly raising "),e("code",null,"StopIteration"),t(").")])],-1)),n[3]||(n[3]=e("p",null,[e("strong",null,"Generators provide a clean and efficient way to work with sequences, especially when dealing with large amounts of data or when you need to generate values on the fly!")],-1))]),_:1},16))}};export{C as default};
