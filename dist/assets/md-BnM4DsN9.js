import{b as s,o as r,w as u,g as n,B as t,v as i,x as c,C as a}from"./modules/vue-DYRo_Lls.js";import{I as m}from"./slidev/default-COya6M-5.js";import{u as p,f as g}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const v={__name:"s5.md__slidev_280",setup(d){const{$clicksContext:l,$frontmatter:o}=p();return l.setup(),(f,e)=>(r(),s(m,i(c(a(g)(a(o),279))),{default:u(()=>e[0]||(e[0]=[n("h3",null,[t("Introduction to "),n("code",null,"*args"),t(" - Variable Positional Arguments ⚙️")],-1),n("h1",null,[n("code",null,"*args"),t(": Functions with Variable Number of Positional Arguments")],-1),n("p",null,[n("strong",null,[t("What if you want to create a function that can accept a "),n("em",null,"variable number"),t(" of positional arguments? This is where "),n("code",null,"*args"),t(" comes in!")])],-1),n("p",null,[n("strong",null,[n("code",null,"*args"),t(' (pronounced "star args"):')])],-1),n("ul",null,[n("li",null,[n("strong",null,"Special syntax in function definition:"),t(" The "),n("code",null,"*args"),t(" syntax in a function parameter list allows a function to accept "),n("strong",null,"any number of positional arguments"),t(".")]),n("li",null,[n("strong",null,"Collects arguments into a tuple:"),t(" Python gathers all the positional arguments passed in the function call into a "),n("strong",null,"tuple"),t(" named "),n("code",null,"args"),t(" (you can actually choose any valid variable name after the "),n("code",null,"*"),t(", but "),n("code",null,"args"),t(" is convention).")]),n("li",null,[n("strong",null,"Access arguments as a tuple:"),t(" Inside the function, you can access and iterate over the arguments using the "),n("code",null,"args"),t(" tuple.")])],-1)])),_:1},16))}};export{v as default};
