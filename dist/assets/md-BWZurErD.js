import{b as i,o as a,w as r,g as e,B as l,v as u,x as c,C as o}from"./modules/vue-DYRo_Lls.js";import{I as d}from"./slidev/two-cols-header-Bm3rW2CS.js";import{u as p,f as m}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const C={__name:"session-8.md__slidev_818",setup(f){const{$clicksContext:s,$frontmatter:t}=p();return s.setup(),(g,n)=>(a(),i(d,u(c(o(m)(o(t),817))),{default:r(()=>n[0]||(n[0]=[e("h3",null,[l("Filtering Data - "),e("code",null,"isin()"),l(" Filtering - Introduction üñêÔ∏èüîçüìäüêº")],-1),e("p",null,[e("strong",null,[l("Filtering with "),e("code",null,"isin()"),l(": Checking for Value Membership")])],-1),e("p",null,[l("The "),e("code",null,".isin()"),l(" method is used to filter rows based on whether a column‚Äôs values are present in a "),e("em",null,"list"),l(" or "),e("em",null,"set"),l(" of allowed values.")],-1),e("p",null,[e("strong",null,[l("Why is "),e("code",null,"isin()"),l(" Useful?")])],-1),e("ul",null,[e("li",null,[e("strong",null,"Filtering by Categories:"),l(" Select rows where a column‚Äôs value belongs to a specific category (e.g., filter for cities that are in a list of 'major cities').")]),e("li",null,[e("strong",null,"Cleaning Data Based on Allowed Values:"),l(" Keep only rows with valid values in a column, based on a predefined list of acceptable entries.")]),e("li",null,[e("strong",null,"Simplifying Complex OR Conditions:"),l(),e("code",null,"isin()"),l(" can often replace long chains of "),e("code",null,"OR"),l(" conditions when checking for multiple specific values.")])],-1),e("p",null,[e("strong",null,[l("Let‚Äôs see how to use "),e("code",null,".isin()"),l(" to filter DataFrames based on value membership!")])],-1)])),_:1},16))}};export{C as default};
