import{b as a,o as c,w as r,g as l,B as e,v as u,x as i,C as n}from"./modules/vue-DYRo_Lls.js";import{I as m}from"./slidev/two-cols-header-Bm3rW2CS.js";import{u as d,f as p}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const S={__name:"session-7.md__slidev_785",setup(f){const{$clicksContext:t,$frontmatter:s}=d();return t.setup(),(_,o)=>(c(),a(m,u(i(n(p)(n(s),784))),{default:r(()=>o[0]||(o[0]=[l("h3",null,"Basic DataFrame Operations - Selection & Access - Cell Selection Summary ‚úÖüéØüñêÔ∏èüìäüêº",-1),l("p",null,[l("strong",null,"Summary: DataFrame Cell Selection")],-1),l("p",null,"You can select individual cells in a DataFrame using:",-1),l("ul",null,[l("li",null,[l("strong",null,"Label-based Cell Access:"),e(),l("code",null,"df.loc['row_label', 'column_name']"),e(" - Uses "),l("code",null,".loc[]"),e(" with row "),l("em",null,"label"),e(" and column "),l("em",null,"name"),e(".")]),l("li",null,[l("strong",null,"Position-based Cell Access:"),e(),l("code",null,"df.iloc[row_position, column_position]"),e(" - Uses "),l("code",null,".iloc[]"),e(" with row "),l("em",null,"position"),e(" and column "),l("em",null,"position"),e(".")])],-1),l("p",null,[l("strong",null,[e("Key takeaway: Cell selection combines row and column access using "),l("code",null,".loc[]"),e(" for labels and "),l("code",null,".iloc[]"),e(" for positions.")])],-1),l("p",null,[e("With Column, Row, and Cell Selection covered, we‚Äôve completed the core "),l("strong",null,"DataFrame Selection and Access"),e(" techniques!")],-1),l("p",null,[e("Let‚Äôs move on to "),l("strong",null,"DataFrame Inspection"),e(" next to quickly understand DataFrames!")],-1)])),_:1},16))}};export{S as default};
