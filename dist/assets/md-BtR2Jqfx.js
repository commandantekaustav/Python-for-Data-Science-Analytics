import{b as n,o as l,w as i,g as e,B as a,v as u,x as p,C as o}from"./modules/vue-DYRo_Lls.js";import{I as c}from"./slidev/default-COya6M-5.js";import{u as d,f as m}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const x={__name:"session-2.md__slidev_597",setup(h){const{$clicksContext:t,$frontmatter:s}=d();return t.setup(),(g,r)=>(l(),n(c,u(p(o(m)(o(s),596))),{default:i(()=>r[0]||(r[0]=[e("h2",null,"Broadcasting Incompatible Shapes - Errors ⛔️",-1),e("p",null,[e("strong",null,[a("It’s crucial to understand when broadcasting "),e("em",null,"fails"),a(". When array shapes are not compatible according to the broadcasting rules, NumPy will raise a "),e("code",null,"ValueError: operands could not be broadcast together"),a(" error.")])],-1),e("p",null,[e("strong",null,"Handling Broadcasting Errors:")],-1),e("ul",null,[e("li",null,[e("strong",null,"Check Array Shapes:"),a(" Always verify the shapes of your arrays when performing operations, especially if you expect broadcasting. Use "),e("code",null,".shape"),a(" attribute.")]),e("li",null,[e("strong",null,"Reshape Arrays:"),a(" If broadcasting fails due to shape incompatibility, you might need to reshape one or both arrays using "),e("code",null,"reshape()"),a(", "),e("code",null,"transpose()"),a(", or other reshaping functions to make them compatible "),e("em",null,"if logically possible"),a(" for your operation.")]),e("li",null,[e("strong",null,"Understand Broadcasting Rules:"),a(" Review the broadcasting rules (Rule 1, 2, 3) to understand why certain shapes are incompatible.")])],-1),e("p",null,[e("strong",null,"NumPy’s broadcasting is powerful, but it’s essential to be aware of shape compatibility and handle potential errors that arise from incompatible array shapes!")],-1)])),_:1},16))}};export{x as default};
