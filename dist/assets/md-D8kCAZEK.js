import{b as a,o,w as i,g as e,B as t,v as u,x as c,C as n}from"./modules/vue-DYRo_Lls.js";import{I as d}from"./slidev/default-COya6M-5.js";import{u as p,f as m}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const w={__name:"s7.md__slidev_422",setup(f){const{$clicksContext:s,$frontmatter:r}=p();return s.setup(),(h,l)=>(o(),a(d,u(c(n(m)(n(r),421))),{default:i(()=>l[0]||(l[0]=[e("h2",null,"Your Turn: Error Handling Exercise ✍️",-1),e("h1",null,[t("Practice "),e("code",null,"try-except"),t(" & "),e("code",null,"assert")],-1),e("h3",null,[e("strong",null,[t("Exercise 2: Using "),e("code",null,"assert"),t(" for input validation")])],-1),e("ol",null,[e("li",null,[e("strong",null,[t("Write a Python function "),e("code",null,"calculate_discounted_price(price, discount_percentage)"),t(" that:")]),e("ul",null,[e("li",null,[t("Takes "),e("code",null,"price"),t(" and "),e("code",null,"discount_percentage"),t(" as input.")]),e("li",null,[e("strong",null,[t("Uses "),e("code",null,"assert"),t(" statements to validate the inputs:")]),e("ul",null,[e("li",null,[t("Assert that "),e("code",null,"price"),t(" is a positive number (greater than 0).")]),e("li",null,[t("Assert that "),e("code",null,"discount_percentage"),t(" is between 0 and 100 (inclusive).")]),e("li",null,[t("Include informative error messages in your "),e("code",null,"assert"),t(" statements to explain the validation rules.")])])]),e("li",null,[e("strong",null,"If the assertions pass (inputs are valid), calculate and return the discounted price.")]),e("li",null,[e("strong",null,[t("If any assertion fails, an "),e("code",null,"AssertionError"),t(" will be raised (which is the expected behavior for input validation using "),e("code",null,"assert"),t(").")])])])])],-1)])),_:1},16))}};export{w as default};
