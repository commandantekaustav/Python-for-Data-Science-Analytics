import{b as e,o as r,w as i,g as t,B as l,v as p,x as u,C as a}from"./modules/vue-DYRo_Lls.js";import{I as c}from"./slidev/default-COya6M-5.js";import{u as d,f as m}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const h={__name:"session-5.md__slidev_718",setup(x){const{$clicksContext:n,$frontmatter:o}=d();return n.setup(),(f,s)=>(r(),e(c,p(u(a(m)(a(o),717))),{default:i(()=>s[0]||(s[0]=[t("h3",null,[l("Splitting Arrays: "),t("code",null,"np.split()"),l(" - "),t("code",null,"axis=0"),l(" Explanation ➕✂️ (Part 3)")],-1),t("p",null,[t("strong",null,[t("code",null,"np.split()"),l(" with "),t("code",null,"axis=0"),l(" - Explanation")])],-1),t("p",null,[l("As you can see in the output, "),t("code",null,"np.split(array, 2, axis=0)"),l(" split the original 2D array into "),t("strong",null,"two sub-arrays vertically"),l(".")],-1),t("p",null,[l("This is exactly how "),t("code",null,"np.vsplit()"),l(" would behave - splitting along "),t("code",null,"axis=0"),l(" for a 2D array is equivalent to vertical splitting.")],-1),t("p",null,[t("strong",null,[t("code",null,"axis=0"),l(" for "),t("code",null,"np.split()"),l(" means split into sub-arrays "),t("em",null,"row-wise"),l(".")])],-1)])),_:1},16))}};export{h as default};
