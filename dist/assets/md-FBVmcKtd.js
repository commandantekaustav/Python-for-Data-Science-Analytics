import{b as u,o as r,w as s,g as n,i as a,B as t,v as c,x as m,C as l}from"./modules/vue-DcZKNubr.js";import{I as p}from"./slidev/default-DITZbOMS.js";import{u as d,f}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const k={__name:"s5.md__slidev_304",setup(y){const{$clicksContext:i,$frontmatter:o}=d();return i.setup(),(g,e)=>(r(),u(p,c(m(l(f)(l(o),303))),{default:s(()=>[e[0]||(e[0]=n("h3",null,"Returning Functions from Functions (Brief Intro) ⚙️",-1)),a(` #  Returning Functions from Functions - Functions as Return Values

**In Python, functions are first-class citizens. This means you can do interesting things with functions, including **returning a function from another function!*** `),e[1]||(e[1]=n("p",null,[n("strong",null,"Explanation:")],-1)),e[2]||(e[2]=n("ol",null,[n("li",null,[n("code",null,"create_multiplier(factor)"),t(" is a function that "),n("em",null,"creates and returns"),t(),n("code",null,"multiplier_function"),t(".")]),n("li",null,[n("code",null,"multiplier_function"),t(" is an inner function that uses the "),n("code",null,"factor"),t(" from the "),n("em",null,"outer"),t(" function’s scope (this is related to closures, a slightly more advanced topic).")]),n("li",null,[t("When you call "),n("code",null,"create_multiplier(5)"),t(", it "),n("em",null,"returns"),t(" the "),n("code",null,"multiplier_function"),t(" that is specialized to multiply by 5. This returned function is then assigned to "),n("code",null,"multiply_by_5"),t(".")]),n("li",null,[t("Similarly, "),n("code",null,"create_multiplier(10)"),t(" returns a "),n("code",null,"multiplier_function"),t(" specialized to multiply by 10, assigned to "),n("code",null,"multiply_by_10"),t(".")]),n("li",null,[t("Now, "),n("code",null,"multiply_by_5"),t(" and "),n("code",null,"multiply_by_10"),t(" can be called like regular functions to perform multiplication by their respective factors.")])],-1)),e[3]||(e[3]=n("p",null,[n("strong",null,"This concept of functions returning functions is a key aspect of functional programming in Python and is used in more advanced techniques like decorators (which we’ll explore later)!")],-1)),e[4]||(e[4]=n("p",null,[n("strong",null,"Next: Let’s summarize Session 5 and wrap up our exploration of Functions! ➡️")],-1))]),_:1},16))}};export{k as default};
