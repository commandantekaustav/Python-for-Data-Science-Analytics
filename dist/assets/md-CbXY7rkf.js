import{b as r,o as u,w as s,g as n,B as o,v as d,x as p,C as t}from"./modules/vue-DYRo_Lls.js";import{I as m}from"./slidev/two-cols-header-Bm3rW2CS.js";import{u as f,f as c}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const Y={__name:"session-2.md__slidev_611",setup(g){const{$clicksContext:i,$frontmatter:l}=f();return i.setup(),(w,e)=>(u(),r(m,d(p(t(c)(t(l),610))),{left:s(a=>e[0]||(e[0]=[n("ul",null,[n("li",null,"You can now perform element-wise arithmetic operations (addition, subtraction, multiplication, division, exponentiation) on NumPy arrays."),n("li",null,"You understand the concept of broadcasting and its benefits for efficient array operations."),n("li",null,"You are familiar with the rules of broadcasting (Dimension Compatibility, Dimension Matching, Alignment).")],-1)])),right:s(a=>e[1]||(e[1]=[n("ul",null,[n("li",null,"You can identify cases where broadcasting will work and when it will result in errors due to incompatible shapes."),n("li",null,[o("You know how to reshape NumPy arrays using "),n("code",null,"np.reshape()"),o(" and understand shape inference with "),n("code",null,"-1"),o(".")]),n("li",null,[o("You can flatten arrays to 1D using "),n("code",null,".flatten()"),o(" and "),n("code",null,".ravel()"),o(", and expand/squeeze dimensions using "),n("code",null,"np.expand_dims()"),o(" and "),n("code",null,"np.squeeze()"),o(".")])],-1)])),default:s(()=>[e[2]||(e[2]=n("h2",null,"Session 2 - Session End ðŸŽ‰",-1)),e[3]||(e[3]=n("h3",null,"Session 2 Complete! Broadcasting and Reshaping âœ…",-1)),e[4]||(e[4]=n("p",null,[n("strong",null,'You have reached the end of Session 2: "NumPy Array Operations - Basic Operations"!')],-1)),e[5]||(e[5]=n("p",null,[n("strong",null,"Key accomplishments in Session 2:")],-1))]),_:1},16))}};export{Y as default};
