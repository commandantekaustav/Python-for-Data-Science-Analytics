import{b as e,o as a,w as i,g as l,i as u,B as r,v as p,x as d,C as t}from"./modules/vue-DYRo_Lls.js";import{I as g}from"./slidev/default-COya6M-5.js";import{u as y,f as m}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const P={__name:"session-5.md__slidev_723",setup(c){const{$clicksContext:o,$frontmatter:s}=y();return o.setup(),(f,n)=>(a(),e(g,p(d(t(m)(t(s),722))),{default:i(()=>[n[0]||(n[0]=l("h3",null,"Session 5: Your Turn - Exercise 3: Splitting ‚úÇÔ∏èüí™",-1)),n[1]||(n[1]=l("p",null,[l("strong",null,"Exercise 3: Splitting")],-1)),n[2]||(n[2]=l("p",null,[l("strong",null,"Task:")],-1)),n[3]||(n[3]=l("ol",null,[l("li",null,[l("strong",null,"Create a 2D NumPy array"),r(" named "),l("code",null,"large_array"),r(" with shape (6, 6) containing numbers from 1 to 36.")])],-1)),u(" (inclusive). "),n[4]||(n[4]=l("ol",{start:"2"},[l("li",null,[l("strong",null,[r("Vertically split "),l("code",null,"large_array")]),r(" into 3 equal sub-arrays using "),l("code",null,"np.vsplit()"),r(". Store the result in "),l("code",null,"vertical_split_arrays"),r(".")]),l("li",null,[l("strong",null,[r("Horizontally split "),l("code",null,"large_array")]),r(" into 2 equal sub-arrays using "),l("code",null,"np.hsplit()"),r(". Store the result in "),l("code",null,"horizontal_split_arrays"),r(".")]),l("li",null,[l("strong",null,[r("Print "),l("code",null,"vertical_split_arrays"),r(" and "),l("code",null,"horizontal_split_arrays"),r(".")])]),l("li",null,[l("strong",null,[r("Verify the shapes of the resulting sub-arrays in both "),l("code",null,"vertical_split_arrays"),r(" and "),l("code",null,"horizontal_split_arrays"),r(".")])])],-1)),n[5]||(n[5]=l("p",null,[l("strong",null,"Hint:"),r(" Use "),l("code",null,"np.arange().reshape()"),r(" to create "),l("code",null,"large_array"),r(", and "),l("code",null,"np.vsplit()"),r(" and "),l("code",null,"np.hsplit()"),r(" for splitting.")],-1)),n[6]||(n[6]=l("p",null,[l("strong",null,"Write your Python code to solve Exercise 3!")],-1))]),_:1},16))}};export{P as default};
