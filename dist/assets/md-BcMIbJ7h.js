import{b as l,o as s,w as r,g as t,B as n,v as u,x as c,C as a}from"./modules/vue-DYRo_Lls.js";import{I as d}from"./slidev/default-COya6M-5.js";import{u as p,f as m}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const P={__name:"s6.md__slidev_341",setup(g){const{$clicksContext:o,$frontmatter:i}=p();return o.setup(),(h,e)=>(s(),l(d,u(c(a(m)(a(i),340))),{default:r(()=>e[0]||(e[0]=[t("h3",null,"OOP Principles ⚙️",-1),t("h1",null,"OOP Principles: Encapsulation and Abstraction",-1),t("p",null,[t("strong",null,"Encapsulation and Abstraction are two fundamental principles in Object-Oriented Programming that contribute to good code design.")],-1),t("p",null,[t("strong",null,"1. Encapsulation:")],-1),t("ul",null,[t("li",null,[t("strong",null,"Bundling Data and Methods:"),n(" Encapsulation means bundling the data (attributes) and methods (actions) that operate on that data "),t("em",null,"within a single unit"),n(" (an object/class).")]),t("li",null,[t("strong",null,"Information Hiding:"),n(" It also often involves hiding the internal implementation details of an object and exposing only a controlled interface to interact with it.")]),t("li",null,[t("strong",null,"Analogy:"),n(" Think of a car engine. The complex inner workings of the engine (data and processes) are encapsulated within the engine unit. You interact with the engine through well-defined interfaces like the accelerator pedal (methods), without needing to know all the internal combustion details.")])],-1)])),_:1},16))}};export{P as default};
