import{b as u,o as a,w as o,g as e,B as t,v as r,x as c,C as n}from"./modules/vue-DcZKNubr.js";import{I as p}from"./slidev/default-DITZbOMS.js";import{u as d,f as m}from"./slidev/context-DOn3OHKD.js";import"./index-DTPcApfY.js";import"./modules/shiki-BYsr0BdZ.js";const b={__name:"s3.md__slidev_127",setup(g){const{$clicksContext:s,$frontmatter:i}=d();return s.setup(),(f,l)=>(a(),u(p,r(c(n(m)(n(i),126))),{default:o(()=>l[0]||(l[0]=[e("h2",null,"Accessing Tuple Elements (Indexing & Slicing) üìçüî™",-1),e("h1",null,"Accessing Tuple Elements: Indexing and Slicing (Just Like Lists!)",-1),e("p",null,[e("strong",null,"Your Turn!")],-1),e("ul",null,[e("li",null,"Create a tuple of numbers or letters."),e("li",null,[t("Practice: "),e("ul",null,[e("li",null,"Accessing individual elements using positive and negative indices."),e("li",null,[t("Extracting sub-tuples using slicing with different "),e("code",null,"start"),t(", "),e("code",null,"stop"),t(", and "),e("code",null,"step"),t(" values.")]),e("li",null,[t("Try to assign a new value to a tuple element using indexing - observe the "),e("code",null,"TypeError"),t(".")])])])],-1),e("p",null,[e("strong",null,"Key Takeaway:"),t(" Indexing and slicing for tuples work just like lists. Remember that tuples are immutable, so you can‚Äôt modify them in place using indexing or slicing assignment.")],-1),e("p",null,[e("strong",null,"Next: Let‚Äôs explore the methods available for tuples - they are fewer than list methods due to immutability!"),t(" ‚û°Ô∏è")],-1)])),_:1},16))}};export{b as default};
