import{b as r,o as u,w as a,g as e,B as l,v as i,x as s,C as t}from"./modules/vue-DYRo_Lls.js";import{I as p}from"./slidev/default-COya6M-5.js";import{u as d,f as x}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const E={__name:"s7.md__slidev_384",setup(m){const{$clicksContext:n,$frontmatter:c}=d();return n.setup(),(y,o)=>(u(),r(p,i(s(t(x)(t(c),383))),{default:a(()=>o[0]||(o[0]=[e("h3",null,[l("Exception Handling - Basic Syntax of a "),e("code",null,"try-except"),l(" Block üõ°Ô∏è")],-1),e("p",null,[e("strong",null,[l("Explanation of "),e("code",null,"try-except"),l(" components:")])],-1),e("ul",null,[e("li",null,[e("strong",null,[e("code",null,"try:"),l(" block:")]),e("ul",null,[e("li",null,"Encloses the code that you want to monitor for potential exceptions."),e("li",null,[l("If any exception occurs within the "),e("code",null,"try"),l(" block, Python immediately jumps to the "),e("code",null,"except"),l(" block(s).")])])]),e("li",null,[e("code",null,"except ExceptionType as variable:"),l(),e("strong",null,"block(s):"),e("ul",null,[e("li",null,[l("Follows the "),e("code",null,"try"),l(" block. You can have one or more "),e("code",null,"except"),l(" blocks.")]),e("li",null,[e("code",null,"ExceptionType:"),l(" Specifies the type of exception you want to catch (e.g., "),e("code",null,"TypeError"),l(", "),e("code",null,"ValueError"),l(", "),e("code",null,"ZeroDivisionError"),l(", "),e("code",null,"FileNotFoundError"),l(", or a more general exception type like "),e("code",null,"Exception"),l(" or "),e("code",null,"BaseException"),l(").")]),e("li",null,[e("code",null,"as variable"),l(),e("strong",null,"(optional):"),l(" Allows you to assign the caught exception object to a variable (e.g., "),e("code",null,"e"),l(", "),e("code",null,"err"),l(", "),e("code",null,"ex"),l(") so you can access details about the exception (like the error message).")]),e("li",null,[e("strong",null,"Handler code:"),l(" The code inside the "),e("code",null,"except"),l(" block is executed "),e("em",null,"only if"),l(" an exception of the specified "),e("code",null,"ExceptionType"),l(" (or a compatible subclass) occurs in the "),e("code",null,"try"),l(" block.")])])])],-1)])),_:1},16))}};export{E as default};
