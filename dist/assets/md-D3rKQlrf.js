import{b as n,o as i,w as l,g as e,B as a,v as u,x as c,C as o}from"./modules/vue-DYRo_Lls.js";import{I as m}from"./slidev/default-COya6M-5.js";import{u as p,f as d}from"./slidev/context-Yz-4lzjv.js";import"./index-Q9xIr-xQ.js";import"./modules/shiki-NVXounY8.js";const _={__name:"session-2.md__slidev_580",setup(f){const{$clicksContext:r,$frontmatter:s}=p();return r.setup(),(h,t)=>(i(),n(m,u(c(o(d)(o(s),579))),{default:l(()=>t[0]||(t[0]=[e("h2",null,"NumPy Array Operations - Broadcasting Introduction ðŸ“¡",-1),e("h3",null,"Introduction to Broadcasting",-1),e("p",null,[e("strong",null,"Broadcasting is a powerful feature in NumPy that allows you to perform arithmetic operations on arrays with different shapes, making your code more concise and efficient.")],-1),e("p",null,[e("strong",null,"What is Broadcasting?")],-1),e("ul",null,[e("li",null,[e("strong",null,"Shape Compatibility:"),a(" Broadcasting describes how NumPy handles element-wise operations when arrays have different shapes.")]),e("li",null,[e("strong",null,"Implicit Expansion:"),a(' NumPy "broadcasts" or expands the dimensions of the smaller array to match the larger array, so that element-wise operations can be performed. This expansion is done virtually, without actually creating copies of data, making it memory-efficient.')]),e("li",null,[e("strong",null,"Rules of Broadcasting:"),a(" NumPy has specific broadcasting rules that determine if two arrays are compatible for broadcasting and how the shapes are expanded.")])],-1)])),_:1},16))}};export{_ as default};
